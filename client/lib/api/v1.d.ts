/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/task": {
    /** Create a new task */
    post: operations["createTask"];
  };
  "/task/{_id}": {
    /** Get a task */
    get: operations["getTask"];
    /** Update a task */
    put: operations["updateTask"];
    /** Delete a task */
    delete: operations["deleteTask"];
  };
  "/tasks": {
    /** Get all tasks */
    get: operations["getTasks"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Task */
    task: {
      _id?: string;
      title: string;
      description?: string;
      completed?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
  };
  responses: {
    /** @description 4XX Fail */
    genericFail: {
      content: {
        "application/json": {
          errorCore?: string;
          message?: string;
          details?: string;
        };
      };
    };
  };
  parameters: {
    /** @description Object ID */
    _id: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Create a new task */
  createTask: {
    requestBody?: {
      content: {
        "application/json": {
          title: components["schemas"]["task"]["title"];
          description?: components["schemas"]["task"]["description"];
          completed?: components["schemas"]["task"]["completed"];
        };
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["task"];
        };
      };
      "4XX": components["responses"]["genericFail"];
    };
  };
  /** Get a task */
  getTask: {
    parameters: {
      path: {
        _id: components["parameters"]["_id"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["task"];
        };
      };
      "4XX": components["responses"]["genericFail"];
    };
  };
  /** Update a task */
  updateTask: {
    parameters: {
      path: {
        _id: components["parameters"]["_id"];
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          title?: components["schemas"]["task"]["title"];
          description?: components["schemas"]["task"]["description"];
          completed?: components["schemas"]["task"]["completed"];
        };
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json": components["schemas"]["task"];
        };
      };
      "4XX": components["responses"]["genericFail"];
    };
  };
  /** Delete a task */
  deleteTask: {
    parameters: {
      path: {
        _id: components["parameters"]["_id"];
      };
    };
    responses: {
      /** @description Deleted */
      200: {
        content: {
          "application/json": {
            task?: components["schemas"]["task"];
          };
        };
      };
      "4XX": components["responses"]["genericFail"];
    };
  };
  /** Get all tasks */
  getTasks: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["task"][];
        };
      };
      "4XX": components["responses"]["genericFail"];
    };
  };
}
